package starter.pages;

import net.thucydides.core.annotations.DefaultUrl;
import org.junit.Assert;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import starter.settings.setup.SetUp;

@DefaultUrl("page:form.user.creation.url")
public class FormPage extends SetUp {

    private static final Logger logger = LoggerFactory.getLogger(FormPage.class);
    private static final String path = "src/test/resources/data/signup_user_account.csv";
    private final String username = faker.name().username().replaceAll("[.]", "");
    private final StringBuffer setUsernameLength = new StringBuffer(username);
    private final String email = faker.internet().emailAddress(username);
    private final String password = faker.internet().password(
            8, 11, true, true, true
    );

    protected String getUsername() {

        if (username.length() > 14) {
            setUsernameLength.setLength(14);
        }
        return setUsernameLength.toString();

    }

    protected String getEmail() {
        return email;
    }

    protected String getPassword() {
        return password;
    }

    public void fillInUsernameField(Integer user) {
        logger.info("Enter new username");
        alternativeClick(getDriver(), elements.getUsernameRegisterPage());

        if (data.getAutogenerateDataOption()) {
            logger.info("Username -> " + getUsername());
            elements.getUsernameRegisterPage().sendKeys(getUsername());
            attachData("Username", getUsername());
        } else {
            String username = formulary.getData(0, user, path);
            logger.info("Username -> " + username);
            elements.getUsernameRegisterPage().sendKeys(username);
            attachData("Username", username);
        }

    }

    public void fillInEmailField(Integer mail) {
        logger.info("Enter new email");
        elements.getEmailRegisterPage().click();

        if (data.getAutogenerateDataOption()) {
            logger.info("Email -> " + getEmail());
            elements.getEmailRegisterPage().sendKeys(getEmail());
            attachData("Email", getEmail());
        } else {
            String email = formulary.getData(1, mail, path);
            logger.info("Email -> " + email);
            elements.getEmailRegisterPage().sendKeys(email);
            attachData("Email", email);
        }

    }

    public void fillInPasswordField(Integer passwd) {
        logger.info("Enter new password");
        elements.getPasswordRegisterPage().click();

        if (data.getAutogenerateDataOption()) {
            logger.info("Password -> " + getPassword());
            elements.getPasswordRegisterPage().sendKeys("1a" + getPassword());
            attachData("Passwd", getPassword());
        } else {
            String password = formulary.getData(2, passwd, path);
            logger.info("Password -> " + password);
            elements.getPasswordRegisterPage().sendKeys(password);
            attachData("Passwd", password);
        }

    }

    public void fillInConfirmPasswordField(Integer confirmation) {
        logger.info("Enter password confirmation");
        elements.getConfirmPasswordRegisterPage().click();

        if (data.getAutogenerateDataOption()) {
            logger.info("Password Confirmation -> " + getPassword());
            elements.getConfirmPasswordRegisterPage().sendKeys("1a" + getPassword());
            attachData("Confirm Passwd", getPassword());
        } else {
            String password = formulary.getData(3, confirmation, path);
            logger.info("Password Confirmation -> " + password);
            elements.getConfirmPasswordRegisterPage().sendKeys(password);
            attachData("Confirm Password", password);
        }

    }

    public void clickOnIAgreeCheckBox(String conditions) {
        logger.info("Click on checkbox '" + conditions + "'");
        scrollPage(getDriver(), 750);
        alternativeClick(getDriver(), elements.getIAgreeCheckBox());
    }

    public void submitForm() {
        logger.info("Click on register button");
        elements.getRegisterButton().click();
        waitFor(3).seconds();
    }

    public void validateUser() {
        logger.info("Validate user logged in");
        String userLoggedIn = elements.getUserLoggedIn().getText();
        logger.info("Expected user -> " + getUsername());
        logger.info("Actual user -> " + userLoggedIn);
        Assert.assertEquals(getUsername(), userLoggedIn);
    }

}
